name: docker build and push 
on:
  push:
    branches:
      - main
    paths:
        - 'strapi/**'
env:
    DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
    DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
    DOCKERHUB_REPOSITORY: ${{ secrets.DOCKERHUB_REPOSITORY }}
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: ${{ secrets.AWS_REGION }}
    IMAGE_NAME: gillnavi/strapi
    IMAGE_TAG: ${{github.sha}}

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ env.DOCKERHUB_USERNAME }}
                password: ${{ env.DOCKERHUB_PASSWORD }}
            
            - name: Build and push Docker image
              working-directory: my-medusa-store
              run: |
                  docker build -t $IMAGE_NAME:$IMAGE_TAG .
                  docker push $IMAGE_NAME:$IMAGE_TAG
    
    terraform-deploy:
        runs-on: ubuntu-latest
        needs: build-and-push
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up AWS credentials
              uses: aws-actions/configure-aws-credentials@v3
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Install Terraform
              uses: hashicorp/setup-terraform@v1
              with:
                terraform_version: 1.8.4
            
            - name: Terraform Initialize
              working-directory: Deployment_infra
              run: terraform init

            - name: Plan Terraform changes
              working-directory: Deployment_infra
              run: terraform plan -out=tfplan

            - name: Apply Terraform changes
              working-directory: Deployment_infra
              run: terraform apply -auto-approve tfplan
        